{"ast":null,"code":"var _jsxFileName = \"/home/ivan/to-do-list-typescript/src/components/toDoList/toDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { removeCompletedItems, resetAll } from \"../../redux/actionCreators\";\nimport { ToDoItem } from \"../toDoItem/toDoItem\";\nimport \"./toDoList.css\";\nimport AddingField from \"../addingField/addingField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items, shallowEqual);\n\n  const handleClearCompletedItem = () => {\n    dispatch(removeCompletedItems());\n  };\n\n  const handleResetAll = () => {\n    dispatch(resetAll());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"to-do-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to-do-list__title\",\n      children: \"To do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to-do-list__content\",\n      children: [/*#__PURE__*/_jsxDEV(AddingField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), items && items.map(item => /*#__PURE__*/_jsxDEV(ToDoItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearCompletedItem,\n      children: \"Clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetAll,\n      children: \"Reset all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDoList, \"A2SGMr7o6Sh8nonpnTIX1nlyMTI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/home/ivan/to-do-list-typescript/src/components/toDoList/toDoList.tsx"],"names":["React","useDispatch","useSelector","shallowEqual","removeCompletedItems","resetAll","ToDoItem","AddingField","ToDoList","dispatch","items","state","handleClearCompletedItem","handleResetAll","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,aAA1C;AAEA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,4BAA/C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,gBAAP;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAuB,GAAGR,WAAW,EAA3C;AAEA,QAAMS,KAA8B,GAAGR,WAAW,CAC/CS,KAAD,IAAuBA,KAAK,CAACD,KADmB,EAEhDP,YAFgD,CAAlD;;AAKA,QAAMS,wBAAoC,GAAG,MAAM;AACjDH,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACD,GAFD;;AAIA,QAAMS,cAA0B,GAAG,MAAM;AACvCJ,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGK,KAAK,IACJA,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACR,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAQ,MAAA,OAAO,EAAEJ,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAQ,MAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9BD;;GAAML,Q;UAC4BP,W,EAEOC,W;;;KAHnCM,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { ItemsState, toDoListItem } from \"../../redux/types\";\nimport { removeCompletedItems, resetAll } from \"../../redux/actionCreators\";\nimport { ToDoItem } from \"../toDoItem/toDoItem\";\n\nimport \"./toDoList.css\";\n\nimport AddingField from \"../addingField/addingField\";\n\nconst ToDoList: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const items: readonly toDoListItem[] = useSelector(\n    (state: ItemsState) => state.items,\n    shallowEqual\n  );\n\n  const handleClearCompletedItem: () => void = () => {\n    dispatch(removeCompletedItems());\n  };\n\n  const handleResetAll: () => void = () => {\n    dispatch(resetAll());\n  };\n\n  return (\n    <div className=\"to-do-list\">\n      <div className=\"to-do-list__title\">To do list</div>\n      <div className=\"to-do-list__content\">\n        <AddingField />\n        {items &&\n          items.map((item: toDoListItem) => (\n            <ToDoItem key={item.id} item={item} />\n          ))}\n      </div>\n      <button onClick={handleClearCompletedItem}>Clear completed</button>\n      <button onClick={handleResetAll}>Reset all</button>\n    </div>\n  );\n};\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}