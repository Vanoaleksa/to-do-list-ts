{"ast":null,"code":"var _jsxFileName = \"/home/ivan/to-do-list-typescript/src/components/addingField/addingField.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addItem } from \"../../redux/actionCreators\";\nimport \"./addingField.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddingField = () => {\n  _s();\n\n  const [errorInput, setErrorInput] = React.useState(null);\n  const inputEl = useRef(null);\n  const dispatch = useDispatch();\n\n  const handleClickButton = () => {\n    var _inputEl$current;\n\n    if (((_inputEl$current = inputEl.current) === null || _inputEl$current === void 0 ? void 0 : _inputEl$current.value.trim()) !== \"\") {\n      var _inputEl$current2;\n\n      dispatch(addItem({\n        name: ((_inputEl$current2 = inputEl.current) === null || _inputEl$current2 === void 0 ? void 0 : _inputEl$current2.value) || null\n      }));\n      setErrorInput(null);\n    } else {\n      setErrorInput(\"Write please task\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adding-field__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adding-field__input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"adding-field__input\",\n        placeholder: \"write new task\",\n        ref: inputEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), errorInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adding-field__error\",\n        children: errorInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickButton,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddingField, \"TxEMZrJM8RWunrBezZYTd2iLunc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddingField;\nexport default AddingField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddingField\");","map":{"version":3,"sources":["/home/ivan/to-do-list-typescript/src/components/addingField/addingField.tsx"],"names":["React","useRef","useDispatch","addItem","AddingField","errorInput","setErrorInput","useState","inputEl","dispatch","handleClickButton","current","value","trim","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,OAAT,QAAwB,4BAAxB;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAA8B,IAA9B,CAApC;AAEA,QAAMC,OAAO,GAAGP,MAAM,CAAmB,IAAnB,CAAtB;AAEA,QAAMQ,QAAuB,GAAGP,WAAW,EAA3C;;AAEA,QAAMQ,iBAA6B,GAAG,MAAM;AAAA;;AAC1C,QAAI,qBAAAF,OAAO,CAACG,OAAR,sEAAiBC,KAAjB,CAAuBC,IAAvB,QAAkC,EAAtC,EAA0C;AAAA;;AACxCJ,MAAAA,QAAQ,CAACN,OAAO,CAAC;AAAEW,QAAAA,IAAI,EAAG,sBAAAN,OAAO,CAACG,OAAR,wEAAiBC,KAAjB,KAA0B;AAAnC,OAAD,CAAR,CAAR;AACAN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHD,MAGO;AACLA,MAAAA,aAAa,CAAC,mBAAD,CAAb;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,WAAW,EAAE,gBAFf;AAGE,QAAA,GAAG,EAAEE;AAHP;AAAA;AAAA;AAAA;AAAA,cADF,EAMGH,UAAU,iBAAI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,cANjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAS,MAAA,OAAO,EAAEK,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;GAAMN,W;UAM4BF,W;;;KAN5BE,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { addItem } from \"../../redux/actionCreators\";\n\nimport \"./addingField.css\";\n\nconst AddingField: React.FC = () => {\n  \n  const [errorInput, setErrorInput] = React.useState<null | string>(null);\n\n  const inputEl = useRef<HTMLInputElement>(null);\n\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const handleClickButton: () => void = () => {\n    if (inputEl.current?.value.trim() !== \"\") {\n      dispatch(addItem({ name : inputEl.current?.value || null}));\n      setErrorInput(null);\n    } else {\n      setErrorInput(\"Write please task\");\n    }\n  };\n\n  return (\n    <div className=\"adding-field__container\">\n      <div className=\"adding-field__input-container\">\n        <input\n          className=\"adding-field__input\"\n          placeholder={\"write new task\"}\n          ref={inputEl}\n        ></input>\n        {errorInput && <div className=\"adding-field__error\">{errorInput}</div>}\n      </div>\n      <button  onClick={handleClickButton}>+</button>\n    </div>\n  );\n};\n\nexport default AddingField;\n"]},"metadata":{},"sourceType":"module"}